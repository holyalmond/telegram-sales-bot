from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command, CommandObject

from google_sheets import get_report, get_month_summary, get_year_summary

import datetime

router = Router()

@router.message(Command("report"))
async def command_report(message: Message, command: CommandObject):
    date = command.args

    if not date:
        await message.answer("üìÖ –£–∫–∞–∂–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <code>/report –î–î.–ú–ú.–ì–ì</code>", parse_mode="HTML")
        return

    try:
        datetime.datetime.strptime(date, "%d.%m.%y")
    except ValueError:
        await message.answer("‚ùó–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü—Ä–∏–º–µ—Ä: <code>/report –î–î.–ú–ú.–ì–ì</code>", parse_mode="HTML")
        return
    
    sales, amount = get_report(date)
    await message.answer(f"üßæ –û—Ç—á—ë—Ç –∑–∞ {date}\n–ü—Ä–æ–¥–∞–∂: {sales}\n–°—É–º–º–∞: {amount}‚ÇΩ")

@router.message(Command("today"))
async def command_today(message: Message):
    today = message.date.date().strftime("%d.%m.%y")
    sales, amount = get_report(today)
    await message.answer(f"üßæ –û—Ç—á—ë—Ç –∑–∞ {today}\n–ü—Ä–æ–¥–∞–∂: {sales}\n–°—É–º–º–∞: {amount}‚ÇΩ")

@router.message(Command("month_summary"))
async def command_month_summary(message: Message, command: CommandObject):
    month = command.args

    if not month:
        await message.answer("üìÖ –£–∫–∞–∂–∏ –º–µ—Å—è—Ü –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <code>/month_summary –ú–ú.–ì–ì</code>", parse_mode="HTML")
        return

    try:
        datetime.datetime.strptime(month, "%m.%y")
    except ValueError:
        await message.answer("‚ùó–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –º–µ—Å—è—Ü–∞. –ü—Ä–∏–º–µ—Ä: <code>/month_summary –ú–ú.–ì–ì</code>", parse_mode="HTML")
        return
    
    sales, amount = get_month_summary(month)
    await message.answer(f"üßæ –û—Ç—á—ë—Ç –∑–∞ {month}\n–ü—Ä–æ–¥–∞–∂: {sales}\n–°—É–º–º–∞: {amount}‚ÇΩ")

@router.message(Command("year_summary"))
async def command_year_summary(message: Message, command: CommandObject):
    year = command.args
    if len(str(year)) != 4 or not str(year).isdigit():
        await message.answer("‚ùó –£–∫–∞–∂–∏ –≥–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>–≥–≥–≥–≥</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä: <code>/year_summary 2025</code>", parse_mode="HTML")
        return
    
    sales, amount = get_year_summary(year)

    if sales == 0:
        await message.answer(f"üìÖ –ó–∞ {year} –≥–æ–¥ –ø—Ä–æ–¥–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    else:
        await message.answer(f"üìä <b>–û—Ç—á—ë—Ç –∑–∞ {year} –≥–æ–¥</b>\n–ü—Ä–æ–¥–∞–∂: <b>{sales}</b>\n–°—É–º–º–∞: <b>{amount:.2f}‚ÇΩ</b>", parse_mode="HTML")
